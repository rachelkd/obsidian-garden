<script async src="https://cdn.jsdelivr.net/npm/lucide@0.474.0/dist/umd/lucide.min.js"></script>
<script>
    // Create callout icons
    window.addEventListener("load", () => {
        document.querySelectorAll(".callout").forEach((elem) => {
            const icon = getComputedStyle(elem).getPropertyValue('--callout-icon');
            const iconName = icon && icon.trim().replace(/^lucide-/, "");

            if (iconName) {
                const calloutTitle = elem.querySelector(".callout-title");

                if (calloutTitle) {
                    // Create title group first
                    const titleGroup = document.createElement("div");
                    titleGroup.className = "callout-title-group";

                    // Create icon
                    const calloutIconContainer = document.createElement("div");
                    const calloutIcon = document.createElement("i");
                    calloutIconContainer.className = "callout-icon";
                    calloutIcon.setAttribute("icon-name", iconName);
                    calloutIconContainer.appendChild(calloutIcon);

                    // Get existing title inner
                    const titleInner = calloutTitle.querySelector(".callout-title-inner");
                    
                    if (titleInner) {
                        // Remove title inner from its current position
                        titleInner.parentNode.removeChild(titleInner);
                        
                        // Add icon and title to group
                        titleGroup.appendChild(calloutIconContainer);
                        titleGroup.appendChild(titleInner);
                        
                        // Insert group at the start of callout title
                        calloutTitle.insertBefore(titleGroup, calloutTitle.firstChild);
                    }
                }
            }
        });

        lucide.createIcons();

        // Collapse callouts
        Array.from(document.querySelectorAll(".callout.is-collapsible")).forEach((elem) => {
            elem.querySelector('.callout-title').addEventListener("click", (event) => {
                if (elem.classList.contains("is-collapsed")) {
                    elem.classList.remove("is-collapsed");
                } else {
                    elem.classList.add("is-collapsed");
                }
            });
        });
    });
</script>
